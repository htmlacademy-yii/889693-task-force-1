-- MySQL Script generated by MySQL Workbench
-- Tue Jul 20 17:20:15 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS = @@UNIQUE_CHECKS, UNIQUE_CHECKS = 0;
SET @OLD_FOREIGN_KEY_CHECKS = @@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS = 0;
SET @OLD_SQL_MODE = @@SQL_MODE, SQL_MODE =
        'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema taskforse
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema taskforse
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `taskforse` DEFAULT CHARACTER SET utf8;
USE `taskforse`;

-- -----------------------------------------------------
-- Table `taskforse`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`category`
(
    `id`         INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `name`       VARCHAR(255) NOT NULL,
    `speciality` VARCHAR(255) NOT NULL,
    `icon_path`  VARCHAR(255) NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforse`.`chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`chat`
(
    `id`         INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `created_at` TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `task_id`    INT UNSIGNED NOT NULL,
    `user_id`    INT UNSIGNED NOT NULL,
    `message`    TEXT         NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `chat_user_id_fk`
        FOREIGN KEY (`user_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `chat_task_id_fk`
        FOREIGN KEY (`task_id`)
            REFERENCES `taskforse`.`task` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `chat_user_id_fk_idx` ON `taskforse`.`chat` (`user_id` ASC) VISIBLE;

CREATE INDEX `chat_task_id_fk_idx` ON `taskforse`.`chat` (`task_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`city`
(
    `id`   INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    PRIMARY KEY (`id`)
)
    ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `taskforse`.`favourite`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`favourite`
(
    `id`           INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `owner_id`     INT UNSIGNED NOT NULL,
    `favourite_id` INT UNSIGNED NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `favourite_owner_id_fk`
        FOREIGN KEY (`owner_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `favourite_favourited_id_fk`
        FOREIGN KEY (`favourite_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `favourite_owner_id_fk_idx` ON `taskforse`.`favourite` (`owner_id` ASC) VISIBLE;

CREATE INDEX `favourite_favourited_id_fk_idx` ON `taskforse`.`favourite` (`favourite_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`file`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`file`
(
    `id`      INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `path`    VARCHAR(255) NOT NULL,
    `data`    BLOB         NOT NULL,
    `user_id` INT UNSIGNED NOT NULL,
    `task_id` INT UNSIGNED NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `file_user_id_fk`
        FOREIGN KEY (`user_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `file_task_id_fk`
        FOREIGN KEY (`task_id`)
            REFERENCES `taskforse`.`task` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `file_user_id_fk_idx` ON `taskforse`.`file` (`user_id` ASC) VISIBLE;

CREATE INDEX `file_task_id_fk_idx` ON `taskforse`.`file` (`task_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`notification`
(
    `id`         INT UNSIGNED        NOT NULL AUTO_INCREMENT,
    `created_at` TIMESTAMP           NULL     DEFAULT CURRENT_TIMESTAMP,
    `user_id`    INT UNSIGNED        NOT NULL,
    `type`       VARCHAR(45)         NOT NULL,
    `is_new`     TINYINT(1) UNSIGNED NOT NULL DEFAULT 1,
    `task_id`    INT UNSIGNED        NOT NULL,
    `review_id`  INT UNSIGNED        NULL,
    `chat_id`    INT UNSIGNED        NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `notify_user_id_fk`
        FOREIGN KEY (`user_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `notify_task_id_fk`
        FOREIGN KEY (`task_id`)
            REFERENCES `taskforse`.`task` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `notify_review_id_fk`
        FOREIGN KEY (`review_id`)
            REFERENCES `taskforse`.`review` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `notify_chat_id_fk`
        FOREIGN KEY (`chat_id`)
            REFERENCES `taskforse`.`chat` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `notify_chat_id_fk_idx` ON `taskforse`.`notification` (`chat_id` ASC) VISIBLE;

CREATE INDEX `notify_task_id_fk_idx` ON `taskforse`.`notification` (`task_id` ASC) VISIBLE;

CREATE INDEX `notify_user_id_fk_idx` ON `taskforse`.`notification` (`user_id` ASC) VISIBLE;

CREATE INDEX `notify_review_id_fk_idx` ON `taskforse`.`notification` (`review_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`response`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`response`
(
    `id`          INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `created_at`  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `status`      VARCHAR(255) NOT NULL DEFAULT 'new',
    `task_id`     INT UNSIGNED NOT NULL,
    `employee_id` INT UNSIGNED NOT NULL,
    `price`       INT UNSIGNED NULL     DEFAULT NULL,
    `message`     TEXT         NULL     DEFAULT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `response_task_id_fk`
        FOREIGN KEY (`task_id`)
            REFERENCES `taskforse`.`task` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `response_user_id_fk`
        FOREIGN KEY (`employee_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `response_task_id_idx` ON `taskforse`.`response` (`task_id` ASC) VISIBLE;

CREATE INDEX `response_user_id_idx` ON `taskforse`.`response` (`employee_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`review`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`review`
(
    `id`          INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `created_at`  TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `task_id`     INT UNSIGNED NOT NULL,
    `employee_id` INT UNSIGNED NOT NULL,
    `employer_id` INT UNSIGNED NOT NULL,
    `description` TEXT         NULL     DEFAULT NULL,
    `rating`      INT          NULL     DEFAULT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `review_task_id_fk`
        FOREIGN KEY (`task_id`)
            REFERENCES `taskforse`.`task` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `review_employee_id_fk`
        FOREIGN KEY (`employee_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `review_employer_id_fk`
        FOREIGN KEY (`employer_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `review_task_id_idx` ON `taskforse`.`review` (`task_id` ASC) VISIBLE;

CREATE INDEX `review_employee_id_idx` ON `taskforse`.`review` (`employee_id` ASC) VISIBLE;

CREATE INDEX `review_employer_id_idx` ON `taskforse`.`review` (`employer_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`specialiy`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`specialiy`
(
    `id`      INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `user_id` INT UNSIGNED NOT NULL,
    `cat_id`  INT UNSIGNED NOT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `spec_user_id_fk`
        FOREIGN KEY (`user_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `spec_cat_id_fk`
        FOREIGN KEY (`cat_id`)
            REFERENCES `taskforse`.`category` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `spec_user_id_fk_idx` ON `taskforse`.`specialiy` (`user_id` ASC) VISIBLE;

CREATE INDEX `spec_cat_id_idx` ON `taskforse`.`specialiy` (`cat_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`task`
(
    `id`            INT UNSIGNED           NOT NULL AUTO_INCREMENT,
    `created_at`    TIMESTAMP              NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `employer_id`   INT UNSIGNED           NOT NULL,
    `employee_id`   INT UNSIGNED           NULL     DEFAULT NULL,
    `status`        VARCHAR(255)           NOT NULL DEFAULT 'new',
    `title`         VARCHAR(255)           NOT NULL,
    `description`   TEXT                   NOT NULL,
    `cat_id`        INT UNSIGNED           NOT NULL,
    `city_id`       INT UNSIGNED           NULL     DEFAULT NULL,
    `location_info` TEXT                   NULL     DEFAULT NULL,
    `address`       VARCHAR(255)           NULL     DEFAULT NULL,
    `latitude`      DECIMAL(8, 6) UNSIGNED NULL     DEFAULT NULL,
    `longitude`     DECIMAL(9, 6) UNSIGNED NULL     DEFAULT NULL,
    `budget`        INT UNSIGNED           NULL     DEFAULT NULL,
    `deadline`      DATE                   NULL     DEFAULT NULL,
    PRIMARY KEY (`id`),
    CONSTRAINT `task_employee_id_fk`
        FOREIGN KEY (`employee_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `task_employer_id_fk`
        FOREIGN KEY (`employer_id`)
            REFERENCES `taskforse`.`user` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `task_cat_id_fk`
        FOREIGN KEY (`cat_id`)
            REFERENCES `taskforse`.`category` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION,
    CONSTRAINT `task_city_id_fk`
        FOREIGN KEY (`city_id`)
            REFERENCES `taskforse`.`city` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE INDEX `task_employee_id_idx` ON `taskforse`.`task` (`employee_id` ASC) VISIBLE;

CREATE INDEX `task_employer_id_idx` ON `taskforse`.`task` (`employer_id` ASC) VISIBLE;

CREATE INDEX `task_cat_id_fk_idx` ON `taskforse`.`task` (`cat_id` ASC) VISIBLE;

CREATE INDEX `task_city_id_fk_idx` ON `taskforse`.`task` (`city_id` ASC) VISIBLE;

CREATE FULLTEXT INDEX `task_title_FULLTEXT` ON `taskforse`.`task` (`title`) VISIBLE;


-- -----------------------------------------------------
-- Table `taskforse`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `taskforse`.`user`
(
    `id`                    INT UNSIGNED NOT NULL AUTO_INCREMENT,
    `created_at`            TIMESTAMP    NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `name`                  VARCHAR(255) NOT NULL,
    `email`                 VARCHAR(255) NOT NULL,
    `password`              VARCHAR(255) NOT NULL,
    `city_id`               INT UNSIGNED NOT NULL,
    `birthday`              DATE         NULL     DEFAULT NULL,
    `userpic_path`          BLOB         NULL     DEFAULT NULL,
    `about`                 TEXT         NULL     DEFAULT NULL,
    `role`                  VARCHAR(255) NOT NULL DEFAULT 'employer',
    `last_seen`             TIMESTAMP    NULL     DEFAULT NULL,
    `phone`                 VARCHAR(255) NULL     DEFAULT NULL,
    `skype`                 VARCHAR(255) NULL     DEFAULT NULL,
    `telegram`              VARCHAR(255) NULL     DEFAULT NULL,
    `notify_new_message`    TINYINT(1)   NULL     DEFAULT 1,
    `notify_task_action`    TINYINT(1)   NULL     DEFAULT 1,
    `notify_new_review`     TINYINT(1)   NULL     DEFAULT 1,
    `setting_hide_contacts` TINYINT(1)   NULL     DEFAULT 0,
    `setting_hide_profile`  TINYINT(1)   NULL     DEFAULT 0,
    PRIMARY KEY (`id`),
    CONSTRAINT `user_city_id_fk`
        FOREIGN KEY (`city_id`)
            REFERENCES `taskforse`.`city` (`id`)
            ON DELETE NO ACTION
            ON UPDATE NO ACTION
)
    ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `taskforse`.`user` (`email` ASC) VISIBLE;

CREATE FULLTEXT INDEX `user_name_FULLTEXT` ON `taskforse`.`user` (`name`) VISIBLE;

CREATE INDEX `user_city_id_fk_idx` ON `taskforse`.`user` (`city_id` ASC) VISIBLE;


SET SQL_MODE = @OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS = @OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS = @OLD_UNIQUE_CHECKS;
